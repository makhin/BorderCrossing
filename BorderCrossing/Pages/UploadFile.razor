@page "/uploadfile"

@inherits UploadFileBase

@functions {
    void FileNameValidator(ValidatorEventArgs e)
    {
        var fileName = Convert.ToString(e.Value);
        var extension = Path.GetExtension(fileName);

        e.Status = string.IsNullOrEmpty(fileName) ? ValidationStatus.None :
            (extension == ".zip" ? ValidationStatus.Success : ValidationStatus.Error);
    }
}

<Container>
    @if (Status == PageStatus.ReadyToUpload || Status == PageStatus.Uploading)
    {
        <Validations Mode="ValidationMode.Manual">
            <Validation Status="@FileUploadStatus" Validator="@FileNameValidator">
                <FileEdit Multiple="false" Filter=".zip" Changed="@OnChanged" Progressed="@OnProgressed" Disabled="@(Status != PageStatus.ReadyToUpload)">
                    <Feedback>
                        <ValidationError>@ErrorMessage</ValidationError>
                    </Feedback>
                </FileEdit>
            </Validation>
        </Validations>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <Heading Margin="Margin.Is3.FromTop" Size="HeadingSize.Is6" TextColor="TextColor.Danger">@ErrorMessage</Heading>
        }

        @if (Status == PageStatus.Uploading)
        {
            <Heading Margin="Margin.Is3.FromTop" Size="HeadingSize.Is6">Загрузка</Heading>

            <Paragraph Color="TextColor.Info">Внимание! Загрузка может занять продолжительное время.</Paragraph>

            <Progress Margin="Margin.Is3.FromTop" Size="Size.Large">
                <ProgressBar Value="@PercentageLoad">@PercentageLoad%</ProgressBar>
            </Progress>
        }
    }
    @if (Status == PageStatus.Deserializing)
    {
        <Heading Margin="Margin.Is3.FromTop" Size="HeadingSize.Is6">Подготовка</Heading>

        <Progress Margin="Margin.Is3.FromTop" Size="Size.Large">
            <ProgressBar Value="@PercentagePrep">@PercentagePrep%</ProgressBar>
        </Progress>
    }
</Container>



